(window.webpackJsonp=window.webpackJsonp||[]).push([[330],{682:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("This IO service exposes openHAB Items to the Evertygo "),e("a",{attrs:{href:"http://www.evertygo.com/imperihome",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImperiHome"),e("OutboundLink")],1),t._v(" dashboard app for Android and iOS.\nIt creates a REST service at "),e("em",[t._v("/imperihome/iss")]),t._v(" that implements the "),e("a",{attrs:{href:"http://dev.evertygo.com/api/iss",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImperiHome Standard System API"),e("OutboundLink")],1),t._v(" (ISS).")]),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("The ImperiHome integration service can be installed through the Paper UI. Navigate to Add-ons > Misc and click Install.")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),e("p",[t._v("The ImperiHome integration service identifies itself to ImperiHome using a system ID. By default the unique identifier of your openHAB installation is used. To override the ID, use the "),e("em",[e("a",{attrs:{href:"http://system.id",target:"_blank",rel:"noopener noreferrer"}},[t._v("system.id"),e("OutboundLink")],1)]),t._v(" configuration option.")]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("Root URL of your openHAB installation.\nShould point to the openHAB welcome page\nThis option is currently only required when using the custom icon tag.")]),t._v(" "),t._m(10),t._m(11),t._v(" "),e("p",[t._v("ImperiHome must be configured to connect to your openHAB instance.")]),t._v(" "),e("p",[t._v("Start ImperiHome, open the menu and go to My Systems.\nAdd a new system (+) and choose 'ImperiHome Standard System' as the object type.\nNow enter the URL to your openHAB instance as Local URL, followed by "),e("em",[t._v("/imperihome/iss")]),t._v(".\nFor example, if your openHAB instance is running at "),e("em",[e("a",{attrs:{href:"http://192.168.1.10:8080/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://192.168.1.10:8080/"),e("OutboundLink")],1)]),t._v(", the Local URL would be "),e("em",[e("a",{attrs:{href:"http://192.168.1.10:8080/imperihome/iss",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://192.168.1.10:8080/imperihome/iss"),e("OutboundLink")],1)]),t._v(".")]),t._v(" "),e("p",[t._v("If you have port forwarding or similar set up to access your openHAB from the internet, you can also fill the Remote URL in the same way. For example: "),e("em",[e("a",{attrs:{href:"http://my-openhab-url.dyndns.org:8080/imperihome/iss",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://my-openhab-url.dyndns.org:8080/imperihome/iss"),e("OutboundLink")],1)]),t._v(".\n"),e("em",[t._v("Warning")]),t._v(": this service provides no authentication mechanism, so anyone could use the API to control your system when accessible from the internet.\nAdd a secure proxy or use the openHAB Cloud proxy to protect your system ("),e("a",{attrs:{href:"https://www.openhab.org/docs/installation/security.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("more information"),e("OutboundLink")],1),t._v(").")]),t._v(" "),e("p",[t._v("Click Next to let ImperiHome validate the URL.\nAfter validation succeeded the system is added and you can continue to configure your Items for use in ImperiHome.")]),t._v(" "),t._m(12),t._v(" "),e("p",[t._v("This service uses Item tags to determine how to expose your Items to ImperiHome.\nAll tags are formatted like this:")]),t._v(" "),t._m(13),e("p",[t._v("For example:")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),e("p",[t._v("syntax (after the "),e("em",[t._v("(Groups)")]),t._v(" and before the "),e("em",[t._v("{channel}")]),t._v(").\nIf you created your items another way, e.g. using the Paper UI, "),e("a",{attrs:{href:"https://github.com/openhab/org.openhab.ui.habmin",target:"_blank",rel:"noopener noreferrer"}},[t._v("HABmin"),e("OutboundLink")],1),t._v(" allows you to modify the tags.")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),e("p",[t._v("Specifies the room the device will show up in in ImperiHome.")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),e("p",[t._v("Sets the device label in ImperiHome.\nIf no label is specified, the Item label is used if available.\nOtherwise the Item name will be used.")]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),e("p",[t._v("Sets the mapping for a ImperiHome MultiSwitch device, just like an openHAB sitemap mapping does.\nIn the example below, 'All off', 'Relax' and 'Reading' will be visible in ImperiHome.\nClicking one of the options will send a 0, 1 or 2 value command to the openHAB item.")]),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),e("p",[t._v("Inverts the state of on/off devices such as switches and dimmers.")]),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),e("p",[t._v("Some devices can be linked to another device.\nThis allows you to create combined devices reporting multiple values, or reporting the energy consumption with a switch device.")]),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),e("p",[t._v("or vise versa:")]),t._v(" "),t._m(63),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._v(" "),t._m(77),e("p",[t._v("Implement a Rule listening for the ON command on the switch to handle the stop action yourself.")]),t._v(" "),t._m(78),t._v(" "),t._m(79),e("DocPreviousVersions"),t._v(" "),e("EditPageLink")],1)},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"imperihome-integration-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#imperihome-integration-service","aria-hidden":"true"}},[this._v("#")]),this._v(" ImperiHome integration service")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{name:"configuration"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuration")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"openhab-add-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openhab-add-on","aria-hidden":"true"}},[this._v("#")]),this._v(" openHAB Add-on")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("To configure the ImperiHome integration add-on in openHAB, create a "),s("em",[this._v("imperihome.cfg")]),this._v(" file in the "),s("em",[this._v("conf/services")]),this._v(" directory. The following configuration options can be used:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("System ID")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("system.id=my-openhab-123\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("em",[this._v("Warning")]),this._v(": the system ID can not contain the underscore character (_).")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Root URL")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("openhab.rootUrl=http://myserver.example.org:7070/\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"imperihome"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#imperihome","aria-hidden":"true"}},[this._v("#")]),this._v(" ImperiHome")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"device-tagging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#device-tagging","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Tagging")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:<tagtype>:<value>\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:room:Kitchen\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("If you've defined your Items in "),s("em",[this._v(".items")]),this._v(" files, tags can be added using:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('[ "mytag" ]\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-type","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("type")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Specifies the device type to expose to ImperiHome.\nTake a look at "),s("a",{attrs:{href:"#deviceTypes"}},[this._v("Device types")]),this._v(" below for the supported device types and how to configure them.\nIf no type is specified, this service will try to auto-detect the type from the Item, based on supported value types (OnOff for a switch, HSB for color light) and Item name.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("em",[this._v("Required")]),this._v(": no"),s("br"),this._v(" "),s("em",[this._v("Default")]),this._v(": auto-detect"),s("br"),this._v("\nExample:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:type:DevSwitch\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-room"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-room","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("room")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": no"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(": 'No Room'"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:room:Kitchen\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-label"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-label","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("label")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": no"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(":  Item label or name"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:label:Kitchen light\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-mapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-mapping","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("mapping")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": only for MultiSwitch device"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(": none"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:mapping:0=All off,1=Relax,2=Reading\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-link"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-link","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("link")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Links two devices together, using the value from the linked device as an additional value in the device containing the link tag.\nSee "),s("a",{attrs:{href:"#deviceLinks"}},[this._v("Device links")]),this._v(" for details.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": no"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(": none"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:link:energy:Kitchen_Current_Consumption\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-unit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-unit","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("unit")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Sets the unit for devices with a numeric value, such as "),s("em",[this._v("DevTemperature")]),this._v(" and "),s("em",[this._v("DevGenericSensor")]),this._v(".\nThe unit is only used to tell ImperiHome what to display; no conversion is performed.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": no"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(": none"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:unit:°C\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-invert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-invert","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("invert")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": no"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(": false"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:invert:true\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"tag-icon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-icon","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag: "),s("em",[this._v("icon")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Sets a custom icon to be shown in ImperiHome.\nYou can use all icon names that are also available for use in your sitemaps, including custom icons.\nTo use this tag you must set the openHAB root URL in your "),s("a",{attrs:{href:"#configuration"}},[this._v("configuration")]),this._v(".")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("em",[t._v("Required")]),t._v(": no"),e("br"),t._v(" "),e("em",[t._v("Default")]),t._v(": none"),e("br"),t._v(" "),e("em",[t._v("Example")]),t._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("iss:icon:sofa\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{name:"deviceTypes"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"device-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#device-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Device types")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The following table lists the ImperiHome API device types that you can use in a "),s("em",[this._v("iss:type")]),this._v(" tag.\nNot all device types are currently supported.\nFor those that are supported, the Item types you can use them on are listed.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("table",[e("tr",[e("th",[t._v("Device")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Supported")]),t._v(" "),e("th",[t._v("Item types")]),t._v(" "),e("th",[t._v("Link types")])]),t._v(" "),e("tr",[e("td",[t._v("DevCamera")]),t._v(" "),e("td",[t._v("MJPEG IP Camera")]),t._v(" "),e("td",[t._v("No")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevCO2")]),t._v(" "),e("td",[t._v("CO2 sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevCO2Alert")]),t._v(" "),e("td",[t._v("CO2 Alert sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Contact, Number, String"),e("sup",[t._v("(1)")]),t._v(", Switch")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevDimmer")]),t._v(" "),e("td",[t._v("Dimmable light")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Dimmer, Number")]),t._v(" "),e("td",[t._v("energy")])]),t._v(" "),e("tr",[e("td",[t._v("DevDoor")]),t._v(" "),e("td",[t._v("Door / window security sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Contact, Number, String"),e("sup",[t._v("(1)")]),t._v(", Switch")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevElectricity")]),t._v(" "),e("td",[t._v("Electricity consumption sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("kwh, watt")])]),t._v(" "),e("tr",[e("td",[t._v("DevFlood")]),t._v(" "),e("td",[t._v("Flood security sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Contact, Number, String"),e("sup",[t._v("(1)")]),t._v(", Switch")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevGenericSensor")]),t._v(" "),e("td",[t._v("Generic sensor (any value)")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number, String")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevHygrometry")]),t._v(" "),e("td",[t._v("Hygro sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevLock")]),t._v(" "),e("td",[t._v("Door lock")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Contact, Switch")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevLuminosity")]),t._v(" "),e("td",[t._v("Luminance sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevMotion")]),t._v(" "),e("td",[t._v("Motion security sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Contact, Number, String"),e("sup",[t._v("(1)")]),t._v(", Switch")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevMultiSwitch")]),t._v(" "),e("td",[t._v("Multiple choice actuator")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevNoise")]),t._v(" "),e("td",[t._v("Noise sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevPlayer")]),t._v(" "),e("td",[t._v("Audio/Video player")]),t._v(" "),e("td",[t._v("No")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevPlaylist")]),t._v(" "),e("td",[t._v("Audio/Video playlist")]),t._v(" "),e("td",[t._v("No")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevPressure")]),t._v(" "),e("td",[t._v("Pressure sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevRain")]),t._v(" "),e("td",[t._v("Rain sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("accum")])]),t._v(" "),e("tr",[e("td",[t._v("DevRGBLight")]),t._v(" "),e("td",[t._v("RGB(W) Light (dimmable)")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Color")]),t._v(" "),e("td",[t._v("energy")])]),t._v(" "),e("tr",[e("td",[t._v("DevScene")]),t._v(" "),e("td",[t._v("Scene (launchable)")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Switch, Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevShutter")]),t._v(" "),e("td",[t._v("Shutter actuator")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Dimmer, Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevSmoke")]),t._v(" "),e("td",[t._v("Smoke security sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Contact, Number, String"),e("sup",[t._v("(1)")]),t._v(", Switch")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevSwitch")]),t._v(" "),e("td",[t._v("Standard on/off switch")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Switch")]),t._v(" "),e("td",[t._v("energy")])]),t._v(" "),e("tr",[e("td",[t._v("DevTemperature")]),t._v(" "),e("td",[t._v("Temperature sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevTempHygro")]),t._v(" "),e("td",[t._v("Temperature and Hygrometry combined sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("hygro, temp")])]),t._v(" "),e("tr",[e("td",[t._v("DevThermostat")]),t._v(" "),e("td",[t._v("Thermostat "),e("sup",[t._v("(2)")])]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("curmode, curtemp")])]),t._v(" "),e("tr",[e("td",[t._v("DevUV")]),t._v(" "),e("td",[t._v("UV sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("DevWind")]),t._v(" "),e("td",[t._v("Wind sensor")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("direction")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("sup",[this._v("(1)")]),this._v(" When using a String Item for trippable devices, any non-empty value other than 'ok' will set the device to tripped. This makes it compatible with the Nest Protect binding.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("sup",[this._v("(2)")]),this._v(" Thermostat devices require additional tags. See "),s("a",{attrs:{href:"#thermostat"}},[this._v("Thermostat")]),this._v(" for details.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{name:"deviceLinks"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"device-links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#device-links","aria-hidden":"true"}},[this._v("#")]),this._v(" Device links")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("em",[this._v("link")]),this._v(" tag refers to the name of the Item it should link to.\nThe item must be an ImperiHome device itself, so it must have at least one "),s("em",[this._v("iss")]),this._v(" tag.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"switch-energy-consumption"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch-energy-consumption","aria-hidden":"true"}},[this._v("#")]),this._v(" Switch energy consumption")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("ImperiHome allows you to show the current energy consumption for a "),e("em",[t._v("DevDimmer")]),t._v(", "),e("em",[t._v("DevRGBLight")]),t._v(" and "),e("em",[t._v("DevSwitch")]),t._v(".\nThis example links the "),e("em",[t._v("MyLightEnergy")]),t._v(" Number Item to the "),e("em",[t._v("MyLight")]),t._v(" Switch Item, so the "),e("em",[t._v("DevSwitch")]),t._v(" device will also report the energy consumption value to ImperiHome:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyLight")]),t._v("        "),e("span",{attrs:{class:"token string"}},[t._v('"My Light"')]),t._v("                  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevSwitch"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:energy:MyLight_Energy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node14:switch_binary1"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyLightEnergy")]),t._v("  "),e("span",{attrs:{class:"token string"}},[t._v('"My Light Usage [%.1f W]"')]),t._v("   "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevElectricity"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                              "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node14:meter_watts1"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"total-energy-consumption"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#total-energy-consumption","aria-hidden":"true"}},[this._v("#")]),this._v(" Total energy consumption")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("em",[this._v("DevElectricity")]),this._v(" devices main value is the current consumption in Watts.\nTo add the total consumption in KWh, link your electricity device to a generic sensor device containing the total energy consumption value:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyLight_Energy")]),t._v("        "),e("span",{attrs:{class:"token string"}},[t._v('"My Light Usage [%.1f W]"')]),t._v("          "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevElectricity"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:kwh:MyLight_Total_Energy"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node14:meter_watts1"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyLight_Total_Energy")]),t._v("  "),e("span",{attrs:{class:"token string"}},[t._v('"My Light Total usage [%.1f KWh]"')]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevGenericSensor"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:unit:KWh"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                     "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node14:sensor_power1"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"temphygro"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#temphygro","aria-hidden":"true"}},[this._v("#")]),this._v(" TempHygro")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ImperiHome recognizes the special "),s("em",[this._v("DevTempHygro")]),this._v(" device, combining a temperature and hydrometry sensor.\nYou can create such a device by linking either from a temperature Item to a hygro Item:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyTemp")]),t._v("  "),e("span",{attrs:{class:"token string"}},[t._v('"Temperature [%.1f °C]"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevTempHygro"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:hygro:MyHum"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_temperature"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyHum")]),t._v("   "),e("span",{attrs:{class:"token string"}},[t._v('"Humidity [%d%%]"')]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevHygrometry"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                         "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_relhumidity"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyTemp")]),t._v("  "),e("span",{attrs:{class:"token string"}},[t._v('"Temperature [%.1f °C]"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevTemperature"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                        "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_temperature"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("MyHum")]),t._v("   "),e("span",{attrs:{class:"token string"}},[t._v('"Humidity [%d%%]"')]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevTempHygro"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:temp:MyTemp"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_relhumidity"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"rain-accumulation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rain-accumulation","aria-hidden":"true"}},[this._v("#")]),this._v(" Rain accumulation")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("em",[this._v("DevRain")]),this._v(" devices main value is the current instant rain value (default in mm per hour).\nTo add the total rain accumulation value, link your rain device to a generic sensor device:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("RainCurrent")]),t._v("       "),e("span",{attrs:{class:"token string"}},[t._v('"Rain current [%.1f mm/h]"')]),t._v("     "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevRain"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:accum:RainAccumulation"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("RainAccumulation")]),t._v("  "),e("span",{attrs:{class:"token string"}},[t._v('"Rain accumulation [%.1f mm]"')]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevGenericSensor"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:unit:mm"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("             "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"wind-direction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wind-direction","aria-hidden":"true"}},[this._v("#")]),this._v(" Wind direction")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("em",[this._v("DevWind")]),this._v(" devices main value is the current wind speed (default in km per hour).\nTo add the wind direction value (default in degrees), link your wind device to a generic sensor device:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("WindSpeed")]),t._v("      "),e("span",{attrs:{class:"token string"}},[t._v('"Wind speed [%.1f km/h]"')]),t._v("   "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevWind"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:direction:WindDirection"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("WindDirection")]),t._v("  "),e("span",{attrs:{class:"token string"}},[t._v('"Wind direction [%d deg]"')]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevGenericSensor"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:unit:deg"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("             "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{name:"thermostat"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"thermostat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thermostat","aria-hidden":"true"}},[this._v("#")]),this._v(" Thermostat")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("em",[this._v("DevThermostat")]),this._v(" combines a setpoint, current temperature and mode in one ImperiHome device.\nTo accomplish this using openHAB items, it uses a "),s("em",[this._v("curtemp")]),this._v(" and "),s("em",[this._v("curmode")]),this._v(" link and a few additional tags.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Thermos_Setpoint")]),t._v("   "),e("span",{attrs:{class:"token string"}},[t._v('"Thermostat"')]),t._v("      "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Test"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevThermostat"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:step:0.5"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:minVal:15"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:maxVal:24"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:modes:Home,Away,Comfort,Sleeping"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:curmode:Thermos_Mode"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:curtemp:Thermos_Temp"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Thermos_Temp")]),t._v("       "),e("span",{attrs:{class:"token string"}},[t._v('"Thermos temp"')]),t._v("    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Test"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevTemperature"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:unit:K"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Thermos_Mode")]),t._v("       "),e("span",{attrs:{class:"token string"}},[t._v('"Thermos mode"')]),t._v("    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Test"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevGenericSensor"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("              "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The main "),s("em",[this._v("DevThermostat")]),this._v(" device must be the Item holding the setpoint.\nUsing tags, this device specifies the minimum and maximum setpoint value, the setpoint step and the available modes.\nThe two links specify what Items contain the current temperature and current mode.\nIf you want to use a custom unit, set the "),s("em",[this._v("unit")]),this._v(" tag on the current temperature device.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"shutter-stopper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shutter-stopper","aria-hidden":"true"}},[this._v("#")]),this._v(" Shutter stopper")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("em",[this._v("DevShutter")]),this._v(" device of ImperiHome support a 'stop' action.\nTo use this, link a Switch item to your shutter item, like so:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Dimmer")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("MyShutter")]),t._v("     "),e("span",{attrs:{class:"token string"}},[t._v('"Shutter"')]),t._v("      "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Test"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevShutter"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:stopper:MyShutterStop"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("MyShutterStop")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Stop shutter"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Test"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevSwitch"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"items-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#items-example","aria-hidden":"true"}},[this._v("#")]),this._v(" Items example")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dsl"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("Color")]),t._v("   "),e("span",{attrs:{class:"token class-name"}},[t._v("LVR_Billy")]),t._v("            "),e("span",{attrs:{class:"token string"}},[t._v('"Billy"')]),t._v("         "),e("span",{attrs:{class:"token function"}},[t._v(" <colorlight>")]),t._v("   "),e("span",{attrs:{class:"token tag"}},[t._v(" (Lights)")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Living room"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevRGBLight"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                              "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"hue:0210:001122334455:bulb1:color"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("LVR_TallLamp")]),t._v("         "),e("span",{attrs:{class:"token string"}},[t._v('"Tall lamp"')]),t._v("                     "),e("span",{attrs:{class:"token tag"}},[t._v(" (Lights)")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Living room"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevSwitch"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:invert:true"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("             "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node3:switch_binary"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Dimmer")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("LVR_DinnerTable")]),t._v("      "),e("span",{attrs:{class:"token string"}},[t._v('"Dinner table"')]),t._v("                  "),e("span",{attrs:{class:"token tag"}},[t._v(" (Lights)")]),t._v("       "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Living room"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevDimmer"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                                "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node13:switch_dimmer"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("ENT_Entrance_Current")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Entrance usage [%.1f W]"')]),t._v("       "),e("span",{attrs:{class:"token tag"}},[t._v(" (Wattage)")]),t._v("      "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Entrance"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevElectricity"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:unit:Watt"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("             "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node14:meter_watts1"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("ENT_Temperature")]),t._v("      "),e("span",{attrs:{class:"token string"}},[t._v('"Entrance temperature [%.1f °C]"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token keyword"}},[t._v("Temperature")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Entrance"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevTempHygro"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:link:hygro:ENT_Humidity"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_temperature"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("ENT_Luminance")]),t._v("        "),e("span",{attrs:{class:"token string"}},[t._v('"Entrance light [%d lm]"')]),t._v("        "),e("span",{attrs:{class:"token tag"}},[t._v(" (Luminance)")]),t._v("    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Entrance"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevLuminosity"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:unit:lux"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("               "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_luminance"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v("  "),e("span",{attrs:{class:"token class-name"}},[t._v("ENT_Humidity")]),t._v("         "),e("span",{attrs:{class:"token string"}},[t._v('"Entrance humidity [%d%%]"')]),t._v("      "),e("span",{attrs:{class:"token tag"}},[t._v(" (Humidity)")]),t._v("     "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('"iss:room:Entrance"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"iss:type:DevHygrometry"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                               "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"zwave:device:1:node8:sensor_relhumidity"')]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);n.options.__file="readme.md";s.default=n.exports}}]);