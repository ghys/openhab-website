(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{568:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("This binding does not itself have a configuration.")]),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("The syntax for the ConfigAdmin binding configuration string is:")]),t._v(" "),t._m(4),t._m(5),t._v(" "),a("p",[t._v("Here are some examples of valid binding configuration strings:")]),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),a("DocPreviousVersions"),t._v(" "),a("EditPageLink")],1)},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"configadmin-binding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configadmin-binding","aria-hidden":"true"}},[this._v("#")]),this._v(" ConfigAdmin Binding")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("With this binding it is possible to dynamically change settings that are defined in the Configuration Admin Manager of OSGi, where all configuration data are kept for openHAB. The various "),n("code",[this._v(".cfg")]),this._v(" files are as such used to define the initial configuration, while you can use this binding to change values during runtime, simply by sending a command to an item.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"binding-configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"item-configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#item-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Configuration")])},function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('configadmin="<pid>:<command>"\n')])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("where "),n("code",[this._v("<pid>")]),this._v(" can be configured either fully qualified with preceding "),n("code",[this._v("org.openhab")]),this._v(" or without it as a shortcut. In case no '.' is found within the pid it is prefixed with "),n("code",[this._v("org.openhab")]),this._v(".")])},function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('configadmin="dropbox:syncmode"\nconfigadmin="org.openhab.gcal:refresh"\n')])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dsl"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v("    "),a("span",{attrs:{class:"token class-name"}},[t._v("Dropbox_OnOff")]),t._v("      "),a("span",{attrs:{class:"token string"}},[t._v('"Activate Sync"')]),t._v("  "),a("span",{attrs:{class:"token tag"}},[t._v(" (State)")]),t._v("   "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" configadmin"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"dropbox:activate"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("String")]),t._v("    "),a("span",{attrs:{class:"token class-name"}},[t._v("Dropbox_SyncMode")]),t._v("   "),a("span",{attrs:{class:"token string"}},[t._v('"Syncmode"')]),t._v("       "),a("span",{attrs:{class:"token tag"}},[t._v(" (State)")]),t._v("   "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" configadmin"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"dropbox:syncmode"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="readme.md";n.default=e.exports}}]);