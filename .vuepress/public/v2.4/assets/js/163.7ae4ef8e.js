(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{715:function(e,t,i){"use strict";i.r(t);var s=i(0),a=Object(s.a)({},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[e._m(0),e._v(" "),i("p",[e._v("This is a openHAB binding for the Universal Devices ISY 994i router and PLM. Universal Devices offers a Java SDK for\nexternal programs to communicate with the router. Alternatives include an extensive REST API. See details at\n"),i("a",{attrs:{href:"https://www.universal-devices.com/isy-developers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.universal-devices.com/isy-developers/"),i("OutboundLink")],1),e._v(".")]),e._v(" "),e._m(1),e._v(" "),i("p",[e._v("The following settings can be added to the Items definition.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),i("p",[e._v('You can specify a specific device type to let the binding know that a device is a special type.  This is done using the "type=" configuation item in the binding.')]),e._v(" "),i("p",[e._v("There are currently 3 types available:")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),i("p",[e._v("The transform file (watersensor-en.map) for the water sensor is:")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),i("p",[e._v("The following settings configure the ISY binding in the openhab.cfg file.")]),e._v(" "),e._m(9),e._v(" "),i("DocPreviousVersions"),e._v(" "),i("EditPageLink")],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"isy-binding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#isy-binding","aria-hidden":"true"}},[this._v("#")]),this._v(" ISY Binding")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"items-configuration-with-isy-binding-details"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#items-configuration-with-isy-binding-details","aria-hidden":"true"}},[this._v("#")]),this._v(" Items Configuration with ISY Binding Details")])},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ul",[i("li",[e._v('ctrl - Controller address in the format "x.y.z.w". This can be the address of a ISY Insteon Scene. Insteon addresses use the first three bytes and the last byte identified a particular capability of the device.')]),e._v(" "),i("li",[e._v('type - This can be used to select device types with special configuration needs.  See the "Device Types" section below.')]),e._v(" "),i("li",[e._v("cmd - Specific ISY control to send to the ISY router as a command, "),i("strong",[e._v("ST")]),e._v(" is the default if left out")]),e._v(" "),i("li",[e._v("addr - The Insteon address to monitor for the change. A scene does not report a status change, only the devices in the scene do. Specify the controller of the scene here. Defaults to the controller address if left out")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"device-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Types")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("thermostat - required to perform temperature calculations properly")]),this._v(" "),t("li",[this._v("lock - locks use the security command instead of the normal off/on commands")]),this._v(" "),t("li",[this._v("heartbeat - several battery powered sensors send a heartbeat.  This is just a ST (status) with value 255, and it means that the sensor is still alive.  To make rules easier, you can define these as type=heartbeat with an item type of DateTime, and it will update with the current time every time the heartbeat is received.  You can then check the item using a rule to see if the DateTime item is too old.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"item-examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#item-examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Examples")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('    /* Insteon-enabled thermostat.  Note "type=thermostat" to ensure proper temp calculations, and cmd=CLISPH to use the ISY setpoint heat value instead of status */\n    Number Temperature_Indoor "Inside [%.2f °F]" <temperature> (All) {isy="ctrl=29.24.98.1,type=thermostat,cmd=ST"}\n    Number Temperature_Setpoint\t\t"Desired Temperature [%.2f °F]" <temperature> (All) {isy="ctrl=29.24.98.1,type=thermostat,cmd=CLISPH"}\n\n    /* Regular ISY scene id #12220, but look at device 30.CB.66.1 to get the scene status */\n    Switch Light_Hallway2 "Hallway" <switch> (GroundFloor,Lights) {isy="ctrl=12220,addr=30.CB.66.1"}\n    /* Regular ISY device, controlled directly (won\'t update scenes!)\n    Switch K_DiningRoom_Light "Dining Room Light" (GroundFloor,Lights) {isy="ctrl=F.C3.7C.1"}\n\n    /* ZWave lock.  Note type=lock (makes it use the security commands necessary). The second (Number) entry watches the BATLVL value, which battery-powered devices use to report battery level in percent */\n    Switch BDoorLock "Back Door Lock" <lock> (Locks) {isy="ctrl=ZW004_1,type=lock"}\n    Number BDoorLock_Battery "Back Door Lock Battery [%d]" <battery> (Locks,BattLevels) {isy="ctrl=ZW004_1,cmd=BATLVL"}\n\n    /* Insteon FanLinc, set up with a Keypadlinc.  4 scenes - Off, Low, Med, High */\n    Switch LR_Fan_Off "LR Fan Off" (ISYScenes) {isy="ctrl=4622,addr=1c.e2.d1.3", autoupdate="false"}\n    Switch LR_Fan_Low "LR Fan Low" (ISYScenes) {isy="ctrl=20771,addr=1c.e2.d1.4", autoupdate="false"}\n    Switch LR_Fan_Med "LR Fan Med" (ISYScenes) {isy="ctrl=22031,addr=1c.e2.d1.5", autoupdate="false"}\n    Switch LR_Fan_High "LR Fan High" (ISYScenes) {isy="ctrl=11187,addr=1c.e2.d1.6", autoupdate="false"}\n\n    /* Insteon water sensor - it has 3 subdevices: 1 = dry, 2 = wet, 4 = heartbeat\n       The heartbeat device sends an "ON" (255) ST code as a heartbeat.  With type=heartbeat, the binding\n       sends a DateTime value.  You can use a rule to check that DateTime to see if you have received\n       a heartbeat recently */\n    Contact Water_Heater_Dry "Water Heater Sensor [MAP(watersensor-en.map):%s]" (Sensors) {isy="addr=25.AD.4F.1"}\n    DateTime Water_Heater_Heartbeat "Water Heater HB [%1$td.%1$tm.%1$tY %1$tH:%1$tM]" (Sensors) {isy="addr=25.AD.4F.4", type=heartbeat}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("    CLOSED=Wet\n    OPEN=Dry\n    undefined=Unknown\n    -=Unknown\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"isy-binding-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#isy-binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" ISY Binding Configuration")])},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ul",[i("li",[e._v("isy:refresh=60000 # refresh interval in milliseconds (optional, defaults to 60000 [1 minute])")]),e._v(" "),i("li",[e._v("isy:upnp=true # if true, use UPNP to communicate with the ISY 994i")]),e._v(" "),i("li",[e._v("isy:uuid=uuid:%your_uudid% # UUID of the ISY router")]),e._v(" "),i("li",[e._v("isy:ip=192.168.x.x # the hostname of the ISY router")]),e._v(" "),i("li",[e._v("isy:port=80 # the port of the ISY router")]),e._v(" "),i("li",[e._v("isy:user=user # the user of the ISY router")]),e._v(" "),i("li",[e._v("isy:password=password # the password of the ISY router")])])}],!1,null,null,null);a.options.__file="readme.md";t.default=a.exports}}]);